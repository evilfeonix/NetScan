# Versoin: 2.1
# Name: masscan
# Author: evilfeonix
# Date: 08 - DECEMBER - 2024
# Website: www.evilfeonix.com 
# Email: evilfeonix@gmail.com 


######  This is a tool that simulate a password guessing attack (brute force or dictionary)
######  Named (Email Cracker), is a Python-based project designed to crack password based on email services
######  It aimed to generates a list of password (also known as wordlist) based on the victim's informatiom provided
######  And also trys to crack the victim's email password with the generated password.
######  Those password generated by this tool are 4 in minimum and 18 in maximum (length)

######  Note that the creators of this tool are not responsible for any misuse or damage caused by its usage!.
######  Always use this for legal activity (responsibly).


import threading, socket, os, sys, time, datetime, pyfiglet
from datetime import datetime
# 
global l0g


def F30N1X():
    return """
Usage: python3 scann.py [host/ip] [min_port] [max_port] [hacker/id]
-------
OPTION:
    --help     This argument is what display this guide table
    host/ip    Specify the target host or IP address to scan
    min_port   Specify the Scan Starting point (port)
    max_port   Specify the Scan Ending point (port)
    hacker/id  Specify Attacker Secret Identifier (name)
EXAMPLES:
    python3 scann.py --help
    python3 scann.py 192.168.15.25
    python3 scann.py 192.168.15.25 1 500
    python3 scann.py 192.168.15.25 1 500 evilfeonix
    """

def tool_bann():
    return """\033[91m
           ___   _      _   ____
          __| \ | | ___| |_/ ___|  ___ __ _ _ __
         ___|  \| |/ _ \ __\___ \ / __/ _` | '_ \\
          __| |\  |  __/ |_ ___) | (_| (_| | | | |
           _|_| \_|\___|\__|____/ \___\__,_|_| |_|
                                            v[\033[97m2.1\033[91m]   
                    \033[92mCoded By \033[97mEvilFeonix\033[91m                       
===========================================================
\033[97mUsage: python3 scann.py [host/ip] [min_port] [max_port] [hacker/id]\033[91m
[!]\033[92m Run: `\033[97mpython3 scann.py --help\033[92m` for guide on how to us- \033[91m[!] 
[!]\033[92m ed this tool. also Feel Free to contact us and report  \033[91m[!]
[!]\033[92m any bug/error if found within this tools. And finally  \033[91m[!]
[!]\033[92m  dont forget to follow us at github.com/evilfeonix or  \033[91m[!]
[!]\033[92m   instagram.com/@evilfeonix in order to encourage us   \033[91m[!]
\033[92m       evilfeonix@gmail.com - for latest hacking tricks     \033[91m
===========================================================\033[0m
"""

def grab_banner(ip, port):
    try:
        global l0g
        import socket
        sock = socket.socket()
        sock.settimeout(5)
        sock.connect((ip, port))
        bann = sock.recv(1024).decode('utf-8', errors='ignore')
        l0g += f"[+] Banner from {ip}:{port} - {bann}\r\n"
        sock.close()
    except:
        l0g += f"[+] Capturing Banner from {ip}:{port}: Timeout!\r\n"
        pass

def scan_port(ip,port):
    try:
        global l0g
        import socket
        sock =  socket.socket()
        sock.settimeout(5)
        sock.connect((ip, port))
        l0g += f"[+] {ip}:{port} - OPENNED\r\n"
        print( f"[+] {ip}:{port} - OPENNED")
        open_port.append(port)
        sock.close()
        grab_banner(ip, port)
    except:pass

def scan_ports(host, min_port, max_port, total_port, idx = 0):
    for port in range(min_port, max_port + aditional_port):
        t = threading.Thread(target=scan_port, args=(host, port))
        t.start()
        
def open_port_record(host):
    global l0g
    filename = f"{host} {datetime.now()}"
    filename = filename.replace(" ", "_")
    filename = filename.replace(":", "-")
    l0g_D1R = os.path.join('result')

    if not os.path.exists(l0g_D1R):os.makedirs(l0g_D1R)
    l0g_F1L3 = os.path.join(l0g_D1R, f"{filename}.txt")

    with open(l0g_F1L3, "w") as f:
        if len(open_port) >= 1:f.write(l0g)
        else:f.write("No Open Port Was Captured!")

    print(f"[+] Saved {l0g_F1L3}")


def start_banner(host, hostip, min_port, max_port, total_port):
    print("\033[91m")
    print( "===========================================================")
    print( f"[+] \033[0m"+f"HOST: {host}, IP: {hostip} ".center(50, ' ')+"\033[91m [+]")
    print( "===========================================================")
    print( f"[+] \033[92mStarted Scanning at \033[0m{time.strftime('%H:%M:%S, %d-%m-%Y')}...")
    scan_ports(hostip, min_port, max_port, total_port)

    
def end_banner(host, open_port, hacker, total_port, startime):
    duration = datetime.now() - startime
    open_port_record(host)
    print( f"\033[91m[+] \033[92mFinished Scanning at \033[0m{time.strftime('%H:%M:%S, %d-%m-%Y')}...\033[91m")
    print( "===========================================================")
    print( "[+]\033[92m"+f"{total_port} Port are Scanned Successfully".center(53," ")+"\033[91m[+]")
    print( "[+]\033[92m"+f"{len(open_port)} of {total_port} Port are Openned".center(53," ")+"\033[91m[+]")
    print( "[+]\033[92m"+f"Duration Taken: \033[0m{duration}".center(57," ")+"\033[91m[+]")
    print( f"[+]  \033[92mYou gotta open Record directory in order to check\033[91m  [+]")
    print( f"[+]   \033[92mthe complete result that include targets banner\033[91m   [+]")
    print( "===========================================================")
    print( f"       (:     \033[92mG00D BYE {hacker}\033[92m!                       ")
    print( f"              \033[0m ^_^       \033[92mhave a nice day... \033[91m    :)      ")
    print( "===========================================================")

def NetScan():
    os.system('clear || cls')
    if len(sys.argv) >= 2:
        if len(sys.argv) == 2:
            if sys.argv[1] == ("--help"):
                print(F30N1X())
                os.sys.exit()
            host = sys.argv[1]
            min_port = ""
            max_port = ""
            hacker = ""
        elif len(sys.argv) == 4:
            host = sys.argv[1]
            min_port = int(sys.argv[2])
            max_port = int(sys.argv[3])
            hacker = ""
        elif len(sys.argv) == 5:
            host = sys.argv[1]
            min_port = int(sys.argv[2])
            max_port = int(sys.argv[3])
            hacker = sys.argv[4]
    else:
        print(tool_bann())
        os.sys.exit()


    # host =  "{base_url}?token={token}" if token else f"{base_url}"
    min_port = min_port if min_port else 0
    max_port = max_port if max_port else 65535
    hacker = f"AGENT \033[0m{hacker}" if hacker else "\033[0mUSER"

    total_port = (max_port+aditional_port)-min_port
    # Ports = Ports.split(',')
    try:
        from socket import gethostbyname
        hostip = gethostbyname(host)
    except Exception as a:
        print(f'\033[91mUnkown Host \033[0m{a}\033[91m...')
        os.sys.exit()
    
    try:
        from socket import gethostbyaddr
        domain = gethostbyaddr(hostip)
        domain = domain[0]
    except:domain = hostip
    
    startime = datetime.now()
    start_banner(domain, hostip, min_port, max_port, total_port)
    end_banner(domain, open_port, hacker, total_port, startime)


l0g = ""
hacker = ""
l0g_F1L3 = ""
port_code = 40
extra_port = 1
open_port = []
startime = None
total_port = None
aditional_port = 1

if __name__=="__main__":
    NetScan()